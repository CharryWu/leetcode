OPERATORS = {'+', '-', '*'}
class Solution:
    def addOperators(self, num: str, target: int) -> List[str]:
        n = len(num)
        res = []

        def backtrack(i, path):
            for endi in range(i+1, n+1): # check all numbers lead by current digit num[i]
                if num[i] == '0' and endi > i+1: # skip leading zeros
                    continue
                curnum = num[i:endi]
                path.append(curnum)
                if endi == n: # reach end pos, check expression
                    expr = ''.join(path)
                    if eval(expr) == target:
                        res.append(expr)
                elif endi < n: # backtrack to check possible path generated by every operator
                    for op in OPERATORS:
                        path.append(op)
                        backtrack(endi, path)
                        path.pop()
                path.pop()

        backtrack(0, [])
        return res