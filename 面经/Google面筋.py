https://www.1point3acres.com/bbs/thread-445960-1-1.html
2018(7-9月) FrontEndEng 博士 全职@Google - 内推 - HR筛选 技术电面 Onsite  | Pass | 在职跳槽
最近找工顺利结束啦，感慨良多，在这个版得到很多很好的信息，现在把我的经历写出来，希望能鼓励大家，就不设积分了。先说说我的经历吧。我是一名前台+全栈工程师，工作经历一年，在一家很多印度人的公司，带一个8个人的小团队。之前一直在学术圈混，也有自己的一个小团队。进入industry一年觉得收获还是很大的，这一年launch了几个大project，还有无数小feature。对于前台end to end的流程了解了很多，包括unit test， automation test这些的构架，CI/CD， 页面优化（不同轮子不一样），PR review，前期跟designer， ux， pm讨论产品确定要求，跟其他upstream downstream team确定系统设计，分析实时log。也有遗憾，一个是觉得我这一年上升很快还是应该回归初心更专注学习新技术新语言而不是进入到跟各种组撕逼的日常，另一个觉得我现在的公司虽然tech stack和platform都很好，但是已经没有我可以学的了，最后一点是politics严重，culture不是工程师文化，印度老板micro managing。所以就有了这次换工作的经历。因为我毕竟只有一年industry经历，并不知道这个market会怎么evaluate我，所以我大大小小把各种大厂和hot unicorn都投了一遍，最后基本都拿到了onsite，因为很早拿了挺满意的offer，所以最后onsite其实面的不多。所以这里我想说的是，year of experience其实并没有那么重要，hr和hiring manager聊的时候还是会看你到底做了什么work，你的work的scope，你到底懂不懂技术细节和系统构架。对于我为什么要一年就跳槽这件事，他们也没有过多纠结，我说的就是两点，我要专注学习新技术新语言，我要找一个我喜欢的公司文化。对于他们来说我大概就是一个很nerd的engineer吧，哈哈，这就足够了。

接下来说准备的过程。因为我是在职，并且要带团队，每周还要release product，所以只有晚上和周末可以准备。我先花了一个月在leetcode上，基本就是刷了facebook和linkedin，这两家题出的很好，可以有很多变种和follow up，其实我面的最好的两家都没有任何leetcode原题，但是这个积累的过程挺重要的吧。这个月我刷了300多到400题吧，包括有些高频题做了好几遍，所以其实大概unique的题在200到300之间。我都是在纸上写思路，从把问题画出来开始，然后把思路写出来，基本就是psuedo code，最后把code写在电脑上。最后面试确实都是在白板上写，因为我已经很习惯这个过程了，所以白板写的很好，有的psuedo code写出来基本就是最后的code，并且写的模块化，follow up或者延伸或者换方法都只需要改几个function，其他模块都可以重用，很省时间。第一个月刷题结束就开始申请，电面尽量都安排在一起，同时继续刷。电面都结束后就差不多一个半月了。onsite都安排在大约第二个月的末尾，我觉得要是拖的再长我就得累趴下了。所以有半个月的时间准备onsite，按公司准备，这段时间最重要的对于前段工程师来说就是domain knowledge，各种design pattern（比如observable， redux， data binding， currying，pub/sub， emitter），各种js语言属性包括老版本（promise，callback，pollyfill，bind，Array和Object的各种function），各种小轮子（throttle/debounce, infinite scroll），各种dom操作 (querySelector, getElementById, 等等这些)，都要自己会写，就差不多了。这些其实有经验的程序员不用准备，都成竹在胸了， 但是刚从学校出来的小朋友就要多看看，对自己的工作也很有帮助，而且是一定会考的。可以去glassdoor搜一下interview frontend一般每个公司大概有那么10个帖子，前端的很少，所以都看看吧，很多考点也在里面了，就是以上这些。我结果没有时间准备system design，不过面试的时候发现就是把我工作中每天都会考虑的那些系统设计讲出来就好了。还有些experience的东西知道就是知道不知道即使准备了被问也很容易露馅的，比如accessibility，i18n这些，就随缘吧。恰巧这些我的工作中都需要考虑，面试官也很appreciate这个experience，这个大概就是在大厂工作的好处吧，技术比较细。
接下来说说面试流程和题目吧。Netflix是三轮技术面，加很多轮cross‍‍‌‌‍‌‍‍‌‍‍‍‍‍‌‌‌‍‌ functional，hr，hiring manager，vp面。技术面里是两轮system design，一轮js相关。Google是5轮技术面，每轮两道题，每题有follow up，Google会要求先说出几种解法，时间复杂度空间复杂度，我写的都要求写最优解。其中有两轮是js相关。Airbnb是3轮技术面，其中一轮general，两轮js css相关。Netflix和Google的题我觉得是他们现想的，所以没啥代表意义，只要把以上说的都准备到了就没问题。airbnb题全部可以在地里找到。
最后一点鸡汤吧，我觉得其实运气，心态和交流真的很重要。当然题肯定是要做出来的，这个就是1和0，做出来是最基本的没做出来那说啥都没用。但是很多人都能做出来，然后看啥呢。我这次面试的心态很好，我就觉得跟去开学术会议也差不多，就是大家平等的交流，我很好奇某块东西你们怎么做的怎么想的，你很好奇我怎么做的怎么想的。不管有没有offer，对于我来说是个学习和交流的过程，local tech meetup还没有机会见这么多工程师跟这么多公司聊呢。抱着这个心态就轻松不少，nothing to lose。然后，当做不出来题的时候，我以前会大脑空白紧张，这次并没有，一个是我觉得我准备的算充分吧，另外我也不去想是不是时间不够了，面试官会不会fail我这些，就是把这个当做我工作中一个问题，focus这个问题，不想别的，最后也都做出来了，还展现了思维过程，哈哈。然后运气我觉得可能占80%，我这次就真的很lucky，面试我的人大部分都是很nice的人，而且可能现在market很缺人？或者很缺女工程师？所以结果不错。
以上就是一个工作一年的前端工程师的心得了，这里有很多牛人，我说的不一定对，见笑了。
